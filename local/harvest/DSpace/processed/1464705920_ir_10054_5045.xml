<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-5045</identifier><datestamp>2011-12-27T05:36:54Z</datestamp><dc:title>A GENERALIZED THEORY OF BIT VECTOR DATA-FLOW ANALYSIS</dc:title><dc:creator>KHEDKER, UP</dc:creator><dc:creator>DHAMDHERE, DM</dc:creator><dc:subject>strength reduction transformation</dc:subject><dc:subject>global program optimization</dc:subject><dc:subject>path problems</dc:subject><dc:subject>algorithm</dc:subject><dc:subject>frameworks</dc:subject><dc:subject>bidirectional data flows</dc:subject><dc:subject>data flow analysis</dc:subject><dc:subject>data flow frameworks</dc:subject><dc:description>The classical theory of data flow analysis, which has its roots in unidirectional flows, is inadequate to characterize bidirectional data flow problems. We present a generalized theory of bit vector data flow analysis which explains the known results in unidirectional and bidirectional data flows and provides a deeper insight into the process of data flow analysis. Based on the theory, we develop a worklist-based generic algorithm which is uniformly applicable to unidirectional and bidirectional data flow problems. It is simple, versatile, and easy to adapt for a specific problem. We show that the theory and the algorithm are applicable to all bounded monotone data flow problems which possess the property of the separability of solution. The theory yields valuable information about the complexity of data flow analysis. We show that the complexity of worklist-based iterative analysis is the same for unidirectional and bidirectional problems. We also define a measure of the complexity of round-robin iterative analysis. This measure, called width, is uniformly applicable to unidirectional and bidirectional problems and provides a tighter bound for unidirectional problems than the traditional measure of depth. Other applications include explanation of isolated results in efficient solution techniques and motivation of new techniques for bidirectional flows. In particular, we discuss edge splitting and edge placement and develop a feasibility criterion for decomposition of a bidirectional flow into a sequence of unidirectional flows.</dc:description><dc:publisher>ASSOC COMPUTING MACHINERY</dc:publisher><dc:date>2011-07-18T19:54:12Z</dc:date><dc:date>2011-12-26T12:50:48Z</dc:date><dc:date>2011-12-27T05:36:54Z</dc:date><dc:date>2011-07-18T19:54:12Z</dc:date><dc:date>2011-12-26T12:50:48Z</dc:date><dc:date>2011-12-27T05:36:54Z</dc:date><dc:date>1994</dc:date><dc:type>Article</dc:type><dc:identifier>ACM TRANSACTIONS ON PROGRAMMING LANGUAGES AND SYSTEMS, 16(5), 1472-1511</dc:identifier><dc:identifier>0164-0925</dc:identifier><dc:identifier>http://dx.doi.org/10.1145/186025.186043</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/5045</dc:identifier><dc:identifier>http://hdl.handle.net/10054/5045</dc:identifier><dc:language>en</dc:language></oai_dc:dc>