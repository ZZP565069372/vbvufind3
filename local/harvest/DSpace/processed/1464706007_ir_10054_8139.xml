<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-8139</identifier><datestamp>2011-12-27T05:40:07Z</datestamp><dc:title>Deriving deadlines and periods for real-time update transactions</dc:title><dc:creator>XIONG, M</dc:creator><dc:creator>RAMAMRITHAM, K</dc:creator><dc:subject>real-time database systems</dc:subject><dc:subject>temporal validity</dc:subject><dc:subject>deadline monotonic scheduling</dc:subject><dc:subject>fixed priority scheduling</dc:subject><dc:subject>real-time transaction processing</dc:subject><dc:description>Typically, temporal validity of real-time data is maintained by periodic update transactions. In this paper, we examine the problem of period and deadline assignment for these update transactions such that 1) these transactions can be guaranteed to complete by their deadlines and 2) the imposed CPU workload is minimized. To this end, we propose a novel approach, named the More-Less approach. By applying this approach, updates occur with a period which is more than the period obtained through traditional approaches, but with a deadline which is less than the traditional period. We show that the More-Less approach is better than existing approaches in terms of schedulability and the imposed load. We examine the issue of determining the assignment order in which transactions must be considered for period and deadline assignment so that the resulting CPU workloads can be minimized. To this end, the More-Less approach is first examined in a restricted case where the Shortest Validity First (SVF) order is shown to be an optimal solution. We then relax some of the restrictions and show that SVF is an approximate solution which results in CPU workloads that are close to the optimal solution. Our analysis and experiments show that the More-Less approach is an effective design approach that can provide better schedulability and reduce update transaction CPU workload while guaranteeing data validity constraints.</dc:description><dc:publisher>IEEE COMPUTER SOC</dc:publisher><dc:date>2011-07-31T13:46:00Z</dc:date><dc:date>2011-12-26T12:53:02Z</dc:date><dc:date>2011-12-27T05:40:07Z</dc:date><dc:date>2011-07-31T13:46:00Z</dc:date><dc:date>2011-12-26T12:53:02Z</dc:date><dc:date>2011-12-27T05:40:07Z</dc:date><dc:date>2004</dc:date><dc:type>Article</dc:type><dc:identifier>IEEE TRANSACTIONS ON COMPUTERS, 53(5), 567-583</dc:identifier><dc:identifier>0018-9340</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/8139</dc:identifier><dc:identifier>http://hdl.handle.net/10054/8139</dc:identifier><dc:language>en</dc:language></oai_dc:dc>