<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-1308</identifier><datestamp>2013-11-26T06:52:51Z</datestamp><dc:title>Handling non-linear polynomial queries over dynamic data</dc:title><dc:creator>SHAH, SHETAL</dc:creator><dc:creator>RAMAMRITHAM, KRITHI</dc:creator><dc:subject>optimisation</dc:subject><dc:subject>query processing</dc:subject><dc:description>Applications that monitor functions over rapidly and unpredictably changing data, express their needs as continuous queries. Our focus is on a rich class of queries, expressed as polynomials over multiple data items. Given a set of polynomial queries at a coordinator C, and a user-specified accuracy bound (tolerable imprecision) for each query, we address the problem of assigning data accuracy bounds or filters to the source of each data item. Assigning data accuracy bounds for non-linear queries poses special challenges. Unlike linear queries, data accuracy bounds for non-linear queries depend on the current values of data items and hence need to be recomputed frequently. So, we seek an assignment such that a) if the value of each data item at C is within its data accuracy bound then the value of each query is also within its accuracy bound, b) the number of data refreshes sent by sources to C to meet the query accuracy bounds, is as low as possible, and c) the number of times the data accuracy bounds need to be recomputed is as low as possible. In this paper, we couple novel ideas with existing optimization techniques to derive such an assignment. Specifically, we make the following contributions: (i) Propose a novel technique that significantly reduces the number of times data accuracy bounds must be recomputed; (ii) Show that a small increase in the number of data refreshes can lead to a large reduction in the number of recomputations; we introduce this as a tradeoff in our approach; (iii) Give principled heuristics for addressing negative coefficient polynomial queries where no known optimization techniques can be used; we also prove that under many practically encountered conditions our heuristics can be close to optimal; and (iv) Present a detailed experimental evaluation demonstrating the efficacy of our techniques in handling large number of polynomial queries.</dc:description><dc:publisher>IEEE</dc:publisher><dc:date>2009-05-08T02:38:22Z</dc:date><dc:date>2011-11-28T07:51:36Z</dc:date><dc:date>2011-12-15T09:57:10Z</dc:date><dc:date>2009-05-08T02:38:22Z</dc:date><dc:date>2011-11-28T07:51:36Z</dc:date><dc:date>2011-12-15T09:57:10Z</dc:date><dc:date>2008</dc:date><dc:type>Article</dc:type><dc:identifier>Proceedings of the IEEE 24th International Conference on Data Engineering, Cancun, Mexico, 7-12 April 2008, 1043-1052</dc:identifier><dc:identifier>978-1-4244-1836-7</dc:identifier><dc:identifier>10.1109/ICDE.2008.4497513</dc:identifier><dc:identifier>http://hdl.handle.net/10054/1308</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/1308</dc:identifier><dc:language>en</dc:language></oai_dc:dc>