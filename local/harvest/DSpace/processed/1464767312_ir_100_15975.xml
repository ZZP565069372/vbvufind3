<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-100-15975</identifier><datestamp>2014-10-17T04:41:36Z</datestamp><dc:title>Category-Based Infidelity Bounded Queries over Unstructured Data Streams</dc:title><dc:creator>BHIDE, M</dc:creator><dc:creator>RAMAMRITHAM, K</dc:creator><dc:subject>Continuous query</dc:subject><dc:subject>data stream</dc:subject><dc:subject>category-based query</dc:subject><dc:subject>threshold queries</dc:subject><dc:description>We present the Caicos system that supports continuous infidelity bounded queries over a data stream, where each data item (of the stream) belongs to multiple categories. Caicos is made up of four primitives: Keywords, Queries, Data items, and Categories. A Category is a virtual entity consisting of all those data items that belong to it. The membership of a data item to a category is decided by evaluating a Boolean predicate (associated with each category) over the data item. Each data item and query in turn are associated with multiple keywords. Given a keyword query, unlike conventional unstructured data querying techniques that return the top-K documents, Caicos returns the top-K categories with infidelity less than the user specified infidelity bound. Caicos is designed to continuously track the evolving information present in a highly dynamic data stream. It, hence, computes the relevance of a category to the continuous keyword query using the data items occurring in the stream in the recent past (i.e., within the current "window"). To efficiently provide up-to-date answers to the continuous queries, Caicos needs to maintain the required metadata accurately. This requires addressing two subproblems: 1) Identifying the "right" metadata that needs to be updated for providing accurate results and 2) updating the metadata in an efficient manner. We show that the problem of identifying the right metadata can be further broken down into two subparts. We model the first subpart as an inequality constrained minimization problem and propose an innovative iterative algorithm for the same. The second subpart requires us to build an efficient dynamic programming-based algorithm, which helps us to find the right metadata that needs to be updated. Updating the metadata on multiple processors is a scheduling problem whose complexity is exponential in the length of the input. An approximate multiprocessor scheduling algorithm is, hence, proposed. Experimental evaluation of Caicos using real-world dynamic data shows that Caicos is able to provide fidelity close to 100 percent using 45 percent less resources than the techniques proposed in the literature. This ability of Caicos to work accurately and efficiently even in scenarios with high data arrival rates makes it suitable for data intensive application domains.</dc:description><dc:publisher>IEEE COMPUTER SOC</dc:publisher><dc:date>2014-10-17T04:41:36Z</dc:date><dc:date>2014-10-17T04:41:36Z</dc:date><dc:date>2013</dc:date><dc:type>Article</dc:type><dc:identifier>IEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING, 25(11)2448-2462</dc:identifier><dc:identifier>http://dx.doi.org/10.1109/TKDE.2012.200</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/jspui/handle/100/15975</dc:identifier><dc:language>en</dc:language></oai_dc:dc>