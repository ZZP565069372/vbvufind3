<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-100-2134</identifier><datestamp>2011-12-15T09:11:33Z</datestamp><dc:title>Merge algorithms for intelligent vehicles</dc:title><dc:creator>RARAVI, G</dc:creator><dc:creator>SHINGDE, V</dc:creator><dc:creator>RAMAMRITHAM, K</dc:creator><dc:creator>BHARADIA, J</dc:creator><dc:subject>automatic merge control</dc:subject><dc:subject>driving-time-to-intersection</dc:subject><dc:subject>area-of-interest</dc:subject><dc:subject>vehicle merge sequence</dc:subject><dc:subject>vehicle interference</dc:subject><dc:subject>continuous vehicle stream</dc:subject><dc:description>There is an increased concern towards the design and development of computer-controlled automotive applications to improve safety, reduce accidents, increase traffic flow, and enhance comfort for drivers. Automakers are trying to make vehicles more intelligent by embedding processors which can be used to implement Electronic and Control Software (ECS) for taking smart decisions on the road or assisting the driver in doing the same. These ECS applications are high-integrity, distributed and real-time in nature. Inter-Vehicle Communication and Road-Vehicle Communication (IVC/RVC) mechanisms will only add to this intelligence by enabling distributed implementation of these applications. Our work studies one such application, namely Automatic Merge Control System, which ensures safe vehicle maneuver in the region where two roads intersect. We have discussed two approaches for designing this system both aimed at minimizing the Driving-Time-To-Intersection (DTTI) of vehicles, subject to certain constraints for ensuring safety. We have (i) formulated this system as an optimization problem which can be solved using standard solvers and (ii) proposed an intuitive approach namely, Head of Lane (HoL) algorithm which incurs less Computational overhead compared to optimization formulation. Simulations carried out using Matlab and C++ demonstrate that the proposed approaches ensure safe vehicle maneuvering at intersection regions. In this ongoing work, we are implementing the system on robotic vehicular platforms built in our lab.</dc:description><dc:publisher>SPRINGER</dc:publisher><dc:date>2011-10-24T08:43:48Z</dc:date><dc:date>2011-12-15T09:11:33Z</dc:date><dc:date>2011-10-24T08:43:48Z</dc:date><dc:date>2011-12-15T09:11:33Z</dc:date><dc:date>2007</dc:date><dc:type>Proceedings Paper</dc:type><dc:identifier>Next Generation Design and Verification Methodologies for Distributed Embedded Control Systems,51-65</dc:identifier><dc:identifier>978-1-4020-6253-7</dc:identifier><dc:identifier>http://dx.doi.org/10.1007/978-1-4020-6254-4_5</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/15367</dc:identifier><dc:identifier>http://hdl.handle.net/100/2134</dc:identifier><dc:source>Workshop on Next Generation Design and Verification Methodologies for Distributed Embedded Control Systems,Bangalore, INDIA,JAN 05-06, 2007</dc:source><dc:language>English</dc:language></oai_dc:dc>