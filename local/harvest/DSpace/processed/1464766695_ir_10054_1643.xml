<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-1643</identifier><datestamp>2011-12-27T05:50:52Z</datestamp><dc:title>A theory of regular MSC languages</dc:title><dc:creator>HENRIKSEN, JESPER G</dc:creator><dc:creator>MUKUND, MADHAVAN</dc:creator><dc:creator>NARAYAN KUMAR, K</dc:creator><dc:creator>SOHONI, MILIND</dc:creator><dc:creator>THIAGARAJAN, PS</dc:creator><dc:subject>automata theory</dc:subject><dc:subject>computer software</dc:subject><dc:subject>message sequence chart</dc:subject><dc:subject>telecommunication</dc:subject><dc:description>Message sequence charts (MSCs) are an attractive visual formalism widely used to capture system requirements during the early design stages in domains such as telecommunication software. It is fruitful to have mechanisms for specifying and reasoning about collections of MSCs so that errors can be detected even at the requirements level. We propose, accordingly, a notion of regularity for collections of MSCs and explore its basic properties. In particular, we provide an automata-theoretic characterization of regular MSC languages in terms of finite-state distributed automata called bounded message-passing automata. These automata consist of a set of sequential processes that communicate with each other by sending and receiving messages over bounded FIFO channels. We also provide a logical characterization in terms of a natural monadic second-order logic interpreted over MSCs. A commonly used technique to generate a collection of MSCs is to use a hierarchical message sequence chart (HMSC). We show that the class of languages arising from the so-called bounded HMSCs constitute a proper subclass of the class of regular MSC languages. In fact, we characterize the bounded HMSC languages as the subclass of regular MSC languages that are finitely generated.</dc:description><dc:publisher>Elsevier</dc:publisher><dc:date>2009-09-19T07:10:11Z</dc:date><dc:date>2011-11-25T15:28:09Z</dc:date><dc:date>2011-12-26T13:04:51Z</dc:date><dc:date>2011-12-27T05:50:52Z</dc:date><dc:date>2009-09-19T07:10:11Z</dc:date><dc:date>2011-11-25T15:28:09Z</dc:date><dc:date>2011-12-26T13:04:51Z</dc:date><dc:date>2011-12-27T05:50:52Z</dc:date><dc:date>2005</dc:date><dc:type>Article</dc:type><dc:identifier>Information and Computation 202(1), 1-38</dc:identifier><dc:identifier>0890-5401</dc:identifier><dc:identifier>10.1016/j.ic.2004.08.004</dc:identifier><dc:identifier>http://hdl.handle.net/10054/1643</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/1643</dc:identifier><dc:language>en</dc:language></oai_dc:dc>