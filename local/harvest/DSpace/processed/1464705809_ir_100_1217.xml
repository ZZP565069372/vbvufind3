<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-100-1217</identifier><datestamp>2011-12-15T09:10:01Z</datestamp><dc:title>Minimization of tree pattern queries</dc:title><dc:creator>AMER-YAHIA, S</dc:creator><dc:creator>CHO SR</dc:creator><dc:creator>LAKSHMANAN, LVS</dc:creator><dc:creator>SRIVASTAVA, D</dc:creator><dc:description>Tree patterns form a natural basis to query tree-structured data such as XML and LDAP. Since the efficiency of tree pattern matching against a tree-structured database depends on the size of the pattern, it is essential to identify and eliminate redundant nodes in the pattern and do so as quickly as possible. In this paper, we study tree pattern minimization both in the absence and in the presence of integrity constraints (ICs) on the underlying tree-structured database. When no ICs are considered, we call the process of minimizing a tree pattern, constraint-independent minimization. We develop a polynomial time algorithm called CIM for this purpose. CIM's efficiency stems from two key properties: (i) a node cannot be redundant unless its children are, and (ii) the order of elimination of redundant nodes is immaterial. When ICs are considered for minimization, we refer to it as constraint-dependent minimization. For tree-structured databases, required child/descendant and type co-occurrence ICs are very natural. Under such ICs, we show that the minimal equivalent query is unique. We show the surprising result that the algorithm obtained by first augmenting the tree pattern using ICs, and then applying CIM, always finds the unique minimal equivalent query; we refer to this algorithm as ACIM. While ACIM is also polynomial time, it can be expensive in practice because of its inherent non-locality. We then present a fast algorithm, CDM, that identifies and eliminates local redundancies due to ICs, based on propagating "information labels" up the tree pattern. CDM can be applied prior to ACIM for improving the minimization efficiency. We complement our analytical results with an experimental study that shows the effectiveness of our tree pattern minimization techniques.</dc:description><dc:publisher>ASSOC COMPUTING MACHINERY</dc:publisher><dc:date>2011-10-19T12:16:35Z</dc:date><dc:date>2011-12-15T09:10:01Z</dc:date><dc:date>2011-10-19T12:16:35Z</dc:date><dc:date>2011-12-15T09:10:01Z</dc:date><dc:date>2001</dc:date><dc:type>Article; Proceedings Paper</dc:type><dc:identifier>SIGMOD RECORD,30(2)497-508</dc:identifier><dc:identifier>0163-5808</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/14410</dc:identifier><dc:identifier>http://hdl.handle.net/100/1217</dc:identifier><dc:source>ACM SIGMOD International Conference on Management of Data,SANTA BARBARA, CA,MAY 21-24, 2001</dc:source><dc:language>English</dc:language></oai_dc:dc>