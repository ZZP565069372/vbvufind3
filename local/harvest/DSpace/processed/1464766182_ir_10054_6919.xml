<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-6919</identifier><datestamp>2011-12-27T05:42:43Z</datestamp><dc:title>Refining abstract interpretations</dc:title><dc:creator>GULAVANI, BS</dc:creator><dc:creator>CHAKRABORTY, S</dc:creator><dc:creator>NORI, AV</dc:creator><dc:creator>RAJAMANI, SK</dc:creator><dc:subject>program correctness</dc:subject><dc:subject>abstract interpretation</dc:subject><dc:subject>interpolation</dc:subject><dc:subject>cegar</dc:subject><dc:description>interpretation techniques prove properties of programs by computing abstract fixpoints. All such analyses suffer from the possibility of false errors. We present a dag-based abstraction refinement technique to automatically refine such abstract interpretations and reduce false errors. This technique refines precision loss due to widen operator by a new interpolated widen operator and refines precision loss due to join operator by disjunctions. We prove the soundness and progress properties of this abstraction refinement procedure. .</dc:description><dc:publisher>ELSEVIER SCIENCE BV</dc:publisher><dc:date>2011-07-26T13:44:36Z</dc:date><dc:date>2011-12-26T12:54:36Z</dc:date><dc:date>2011-12-27T05:42:43Z</dc:date><dc:date>2011-07-26T13:44:36Z</dc:date><dc:date>2011-12-26T12:54:36Z</dc:date><dc:date>2011-12-27T05:42:43Z</dc:date><dc:date>2010</dc:date><dc:type>Article</dc:type><dc:identifier>INFORMATION PROCESSING LETTERS, 110(16), 666-671</dc:identifier><dc:identifier>0020-0190</dc:identifier><dc:identifier>http://dx.doi.org/10.1016/j.ipl.2010.05.021</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/6919</dc:identifier><dc:identifier>http://hdl.handle.net/10054/6919</dc:identifier><dc:language>en</dc:language></oai_dc:dc>