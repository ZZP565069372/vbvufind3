<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-1333</identifier><datestamp>2011-12-15T09:57:18Z</datestamp><dc:title>A local coefficient based load sensitive routing protocol for providing QoS</dc:title><dc:creator>TIWARI, ANUNAY</dc:creator><dc:creator>SAHOO, ANIRUDHA</dc:creator><dc:subject>computer simulation</dc:subject><dc:subject>quality of service</dc:subject><dc:subject>routing protocols</dc:subject><dc:subject>resource allocation</dc:subject><dc:description>In an open shortest path first (OSPF) based best effort network, the OSPF shortest path can become the bottleneck when congestion occurs. OSPF cannot forward packets though less congested alternate paths. Hence, OSPF cannot be used to provide quality of service. Earlier, we reported a load sensitive routing (LSR) algorithm which finds alternate path based on OSPF property. In the earlier work, the LSR used global coefficients i.e. all the nodes in the network use the same coefficient for a given destination. But assigning network-wide global coefficient may lead to uneven distribution of alternate paths. That is, some nodes may have many alternate paths whereas others may have few or none. The use of global coefficient was thought to be necessary to make the protocol loop free. In this study, we allow nodes to choose LSR coefficients locally (we call the coefficient L-LSR coefficient) while still retaining the loop-free property. This leads to nodes having more number of alternate paths than the case where they had to use global coefficient. But allowing local coefficients makes the process of calculating the local coefficients complex. Since our protocol has to be loop free, the local coefficients have to be calculated such that the loop free OSPF property is still satisfied. This paper presents detailed algorithm for calculating L-LSR coefficients. Using simulation, we show that L-LSR algorithm not only performs better than OSPF, but also has very significant performance improvement over the other LSR family of algorithms.</dc:description><dc:publisher>IEEE</dc:publisher><dc:date>2009-05-10T08:48:13Z</dc:date><dc:date>2011-11-28T07:58:37Z</dc:date><dc:date>2011-12-15T09:57:18Z</dc:date><dc:date>2009-05-10T08:48:13Z</dc:date><dc:date>2011-11-28T07:58:37Z</dc:date><dc:date>2011-12-15T09:57:18Z</dc:date><dc:date>2006</dc:date><dc:type>Article</dc:type><dc:identifier>Proceedings of the 12th International Conference on Parallel and Distributed Systems (V 1), Minneapolis, MN, 12-15 July 2006, 1-8</dc:identifier><dc:identifier>0-7695-2612-8</dc:identifier><dc:identifier>10.1109/ICPADS.2006.15</dc:identifier><dc:identifier>http://hdl.handle.net/10054/1333</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/1333</dc:identifier><dc:language>en</dc:language></oai_dc:dc>