<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-10054-1467</identifier><datestamp>2011-12-15T09:57:38Z</datestamp><dc:title>Reliable routing of event notifications over P2P overlay routing substrate in event based middleware</dc:title><dc:creator>MAHAMBRE, SHRUTI P</dc:creator><dc:creator>BELLUR, UMESH</dc:creator><dc:subject>computer network reliability</dc:subject><dc:subject>message passing</dc:subject><dc:subject>middleware</dc:subject><dc:subject>peer-to-peer computing</dc:subject><dc:subject>quality of service</dc:subject><dc:subject>telecommunication network routing</dc:subject><dc:description>Event Broker Networks (EBN) are a scalable incarnation of the publish subscribe paradigm for building asynchronous systems. These take the form of overlays of broker nodes and several routing schemes exist that deliver events from publishers to subscribers efficiently on different overlay structures. However quality of service based routing schemes are rare and our work addresses this gap. Specifically we look into the prospect of routing events based on reliability requirements of subscribers for an event type being delivered via the EBN. In this paper, we formally define reliability and propose a multiplicative model which calculates reliability of the P2P overlay routing substrate and an algorithm based on this model, to deliver event notifications to the client. We employ a technique called 'pruning' by which we restrict flooding the entire overlay routing substrate, when finding a reliable path. The complexity analysis of our algorithm shows that it finds a reliable path with a lower message complexity, as compared to the flooding approach. Our algorithm also determines a path with higher reliability than the path established by Hermes [5]. We present initial simulation results, using the Hermes middleware simulator.</dc:description><dc:publisher>IEEE</dc:publisher><dc:date>2009-06-11T04:18:07Z</dc:date><dc:date>2011-11-28T08:14:10Z</dc:date><dc:date>2011-12-15T09:57:38Z</dc:date><dc:date>2009-06-11T04:18:07Z</dc:date><dc:date>2011-11-28T08:14:10Z</dc:date><dc:date>2011-12-15T09:57:38Z</dc:date><dc:date>2007</dc:date><dc:type>Article</dc:type><dc:identifier>Proceedings of the 21st International Parallel and Distributed Processing Symposium, Long Beach, California, USA, 26-30 March 2007, 1-8</dc:identifier><dc:identifier>1-4244-0910-1</dc:identifier><dc:identifier>10.1109/IPDPS.2007.370658</dc:identifier><dc:identifier>http://hdl.handle.net/10054/1467</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/1467</dc:identifier><dc:language>en</dc:language></oai_dc:dc>