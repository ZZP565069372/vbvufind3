<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-100-14870</identifier><datestamp>2014-10-15T12:10:32Z</datestamp><dc:title>Keyword search on form results</dc:title><dc:creator>RAMESH, A</dc:creator><dc:creator>SUDARSHAN, S</dc:creator><dc:creator>JOSHI, P</dc:creator><dc:creator>GAONKAR, MN</dc:creator><dc:subject>Keyword search</dc:subject><dc:subject>Enterprise application forms</dc:subject><dc:subject>Query inversion</dc:subject><dc:subject>DATABASES</dc:subject><dc:description>In recent years there has been a good deal of research in the area of keyword search on structured and semistructured data. Most of this body of work has a significant limitation in the context of enterprise data, since it ignores the application code that has often been carefully designed to present data in a meaningful fashion to users. In this work, we consider how to perform keyword search on enterprise applications, which provide a number of forms that can take parameters; parameters may be explicit, or implicit such as the identifier of the user. In the context of such applications, the goal of keyword search is, given a set of keywords, to retrieve forms along with corresponding parameter values, such that result of each retrieved form executed on the corresponding retrieved parameter values will contain the specified keywords. Some earlier work in this area was based on creating keyword indices on form results, but there are problems in maintaining such indices in the face of updates. In contrast, we propose techniques based on creating inverted SQL queries from the SQL queries in the forms. Unlike earlier work, our techniques do not require any special purpose indices and instead make use of standard text indices supported by most database systems. We have implemented our techniques and show that keyword search can run at reasonable speeds even on large databases with a significant number of forms.</dc:description><dc:publisher>SPRINGER</dc:publisher><dc:date>2014-10-15T12:10:32Z</dc:date><dc:date>2014-10-15T12:10:32Z</dc:date><dc:date>2013</dc:date><dc:type>Article</dc:type><dc:identifier>VLDB JOURNAL, 22(1)99-123</dc:identifier><dc:identifier>http://dx.doi.org/10.1007/s00778-012-0287-5</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/jspui/handle/100/14870</dc:identifier><dc:language>en</dc:language></oai_dc:dc>