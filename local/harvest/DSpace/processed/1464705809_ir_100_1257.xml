<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><identifier>ir-100-1257</identifier><datestamp>2011-12-15T09:10:05Z</datestamp><dc:title>Rationalized 3-instruction machine</dc:title><dc:creator>CHITNIS, SV</dc:creator><dc:creator>SATPATHY, M</dc:creator><dc:creator>OBEROI, S</dc:creator><dc:description>The declarative nature of functional programming languages causes many difficulties in their efficient implementation on conventional machines. The problem is much harder when the language has non-strict (lazy) semantics. Abstract machines serve as an intellectual aid in bridging the semantic gap between such languages and the conventional von Neumann architecture. However they become more and more complex with time as efficiency considerations force the instruction set of the machine to grow in size. In this paper we explain the phenomenon in context of the Three Instruction Machine (TIM). We then define a rationalized instruction set for TIM that allows us to view all enhancements to TIM in a uniform way, This instruction set is quite close to RISC instructions and clearly identifies the key operations on closures. Translation of functional programs to our rationalized instruction set opens up scope for various local and global optimizations. We illustrate this by showing how to build control flow graphs and perform optimizations on it. Lazy arguments in functional programs make it hard to predict evaluation order statically. We define the notion of pseudo-lazy arguments to statically expose the control flow information, wherever possible, for doing better flow analysis.</dc:description><dc:publisher>ASSOC COMPUTING MACHINERY</dc:publisher><dc:date>2011-10-19T15:56:50Z</dc:date><dc:date>2011-12-15T09:10:05Z</dc:date><dc:date>2011-10-19T15:56:50Z</dc:date><dc:date>2011-12-15T09:10:05Z</dc:date><dc:date>1995</dc:date><dc:type>Article; Proceedings Paper</dc:type><dc:identifier>SIGPLAN NOTICES,30(3)94-102</dc:identifier><dc:identifier>0362-1340</dc:identifier><dc:identifier>http://dspace.library.iitb.ac.in/xmlui/handle/10054/14448</dc:identifier><dc:identifier>http://hdl.handle.net/100/1257</dc:identifier><dc:source>ACM SIGPLAN Workshop on Intermediate Representations (IR 95),SAN FRANCISCO, CA,JAN 22, 1995</dc:source><dc:language>English</dc:language></oai_dc:dc>